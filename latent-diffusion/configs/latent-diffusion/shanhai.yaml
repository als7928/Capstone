model:
  base_learning_rate: 1.0e-06
  target: ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    linear_start: 0.0015
    linear_end: 0.0205
    log_every_t: 100
    timesteps: 1000
    loss_type: l1
    first_stage_key: image
    cond_stage_key: density
    image_size: 64 # 흠.
    channels: 3
    concat_mode: true # 이미지-이미지 합칠땐 Concat 방식이 나음
    cond_stage_trainable: true ## Trainable 해야 노이즈제거 성능 좋음 (Frozen 모듈은 Trainable 하지 않음)

    scheduler_config: # 10000 warmup steps
      target: ldm.lr_scheduler.LambdaLinearScheduler ## 추후 LR Scheduler 변경해서 성능개선 가능
      params:
        warm_up_steps: [ 10000 ]
        cycle_lengths: [ 10000000000000 ]
        f_start: [ 1.e-6 ]
        f_max: [ 1. ]
        f_min: [ 1. ]

    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 64
        in_channels: 6
        out_channels: 3
        model_channels: 128
        attention_resolutions:
        - 32
        - 16
        - 8
        num_res_blocks: 2
        channel_mult:
        - 1
        - 4
        - 8
        num_heads: 8

    first_stage_config:
      target: ldm.models.autoencoder.VQModelInterface
      params:
        embed_dim: 3
        n_embed: 8192
        ckpt_path: models/first_stage_models/vq-f4/model.ckpt ## << 오토인코더 Pretrained weight 다운로드 필요
        ddconfig:
          double_z: false
          z_channels: 3
          resolution: 256
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity

    cond_stage_config:
      target: ldm.modules.encoders.modules.SpatialRescaler ## 이미지 resize 모듈
      params:
        n_stages: 2
        in_channels: 182
        out_channels: 3

data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 12
    num_workers: 5
    wrap: False
    train:
      target: ldm.data.shanhai.ShanhaiTrain  #  PUT YOUR DATASET 
      params: # flip 등 증강 기능 -> image, cond 쌍 동일하게 증강 하는 코드 작성 필요. ex) 둘 중 하나만 flip 되면 안됨
        data_dir: train/train_data/train_img
        size: 256
    validation:
      target: ldm.data.shanhai.ShanhaiValidation  #  PUT YOUR DATASET 
      params:
        data_dir: train/train_data/test_img # << 이거 아직 확인 안함
        size: 256

lightning:
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        batch_frequency: 5000
        max_images: 8
        increase_log_steps: False


  trainer:
    benchmark: True